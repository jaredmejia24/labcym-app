/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ExamsExamIdImport } from './routes/exams/$examId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const ResultsIndexLazyImport = createFileRoute('/results/')()
const ExamsIndexLazyImport = createFileRoute('/exams/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ResultsIndexLazyRoute = ResultsIndexLazyImport.update({
  path: '/results/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/results/index.lazy').then((d) => d.Route))

const ExamsIndexLazyRoute = ExamsIndexLazyImport.update({
  path: '/exams/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/exams/index.lazy').then((d) => d.Route))

const ExamsExamIdRoute = ExamsExamIdImport.update({
  path: '/exams/$examId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/exams/$examId': {
      preLoaderRoute: typeof ExamsExamIdImport
      parentRoute: typeof rootRoute
    }
    '/exams/': {
      preLoaderRoute: typeof ExamsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/results/': {
      preLoaderRoute: typeof ResultsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  ExamsExamIdRoute,
  ExamsIndexLazyRoute,
  ResultsIndexLazyRoute,
])

/* prettier-ignore-end */
