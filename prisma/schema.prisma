datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Exam {
  id   Int    @id @default(autoincrement())
  name String @unique @map("name") @db.VarChar(255)

  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  deletedAt    DateTime?      @map("deleted_at")
  examDivision ExamDivision[]
  examResult   ExamResult[]

  @@index([name])
  @@map("exam")
}

model ExamDivision {
  id Int @id @default(autoincrement())

  examId Int @map("exam_id")

  name String @map("name") @db.VarChar(255)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  exam                 Exam                   @relation(fields: [examId], references: [id])
  qualitativeProperty  QualitativeProperty[]
  quantitativeProperty QuantitativeProperty[]

  @@map("exam_division")
}

model QualitativeProperty {
  id Int @id @default(autoincrement())

  name String @map("name") @db.VarChar(255)

  examDivisionId Int @map("exam_division_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  examDivision              ExamDivision                @relation(fields: [examDivisionId], references: [id])
  qualitativePropertyResult QualitativePropertyResult[]
  qualitativePropertyOption QualitativePropertyOption[]

  @@map("qualitative_property")
}

model QuantitativeProperty {
  id Int @id @default(autoincrement())

  examDivisionId Int @map("exam_division_id")

  name  String @map("name") @db.VarChar(255)
  unity String @db.VarChar(255)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  examDivision                           ExamDivision                             @relation(fields: [examDivisionId], references: [id])
  valueReferenceTypeQuantitativeProperty ValueReferenceTypeQuantitativeProperty[]
  quantitativePropertyResult             QuantitativePropertyResult[]

  @@map("quantitative_property")
}

model ValueReferenceType {
  id Int @id @default(autoincrement())

  name String @unique @db.VarChar(255)

  createdAt                              DateTime                                 @default(now()) @map("created_at")
  updatedAt                              DateTime                                 @updatedAt @map("updated_at")
  deletedAt                              DateTime?                                @map("deleted_at")
  ValueReferenceTypeQuantitativeProperty ValueReferenceTypeQuantitativeProperty[]

  @@index([name])
  @@map("value_reference_type")
}

model ValueReferenceTypeQuantitativeProperty {
  valueReferenceTypeId   Int    @map("value_reference_type_id")
  quantitativePropertyId Int    @map("quantitative_property_id")
  value                  String @db.VarChar(255)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  valueReferenceType   ValueReferenceType   @relation(fields: [valueReferenceTypeId], references: [id])
  quantitativeProperty QuantitativeProperty @relation(fields: [quantitativePropertyId], references: [id])

  @@id([valueReferenceTypeId, quantitativePropertyId])
  @@map("value_reference_types_quantitative_properties")
}

model ExamResult {
  id Int @id @default(autoincrement())

  examId Int @map("exam_id")

  note String? @db.VarChar(255)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  exam Exam @relation(fields: [examId], references: [id])

  quantitativePropertyResult QuantitativePropertyResult[]
  qualitativePropertyResult  QualitativePropertyResult[]

  @@map("exam_result")
}

model QuantitativePropertyResult {
  id Int @id @default(autoincrement())

  quantitativePropertyId Int @map("quantitative_property_id")
  examResultId           Int @map("exam_result_id")

  result Decimal

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  quantitativeProperty QuantitativeProperty @relation(fields: [quantitativePropertyId], references: [id])
  examResult           ExamResult           @relation(fields: [examResultId], references: [id])

  @@map("quantitative_property_result")
}

model QualitativePropertyResult {
  id Int @id @default(autoincrement())

  qualitativePropertyId Int  @map("qualitative_property_id")
  examResultId          Int  @map("exam_result_id")
  propertyOptionId      Int? @map("property_option_id")

  result String @db.VarChar(255)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  qualitativeProperty QualitativeProperty @relation(fields: [qualitativePropertyId], references: [id])
  examResult          ExamResult          @relation(fields: [examResultId], references: [id])
  propertyOption      PropertyOption?     @relation(fields: [propertyOptionId], references: [id])

  @@map("qualitative_property_result")
}

model Patient {
  id Int @id @default(autoincrement())

  name           String   @db.VarChar(255)
  identification String?  @unique @db.VarChar(20)
  birthDate      DateTime @map("birth_date")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  result    Result[]

  @@index([identification])
  @@map("patient")
}

model Invoice {
  id Int @id @default(autoincrement())

  number String @unique @db.VarChar(255)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  result    Result[]

  @@index([number])
  @@map("invoice")
}

model PropertyOption {
  id Int @id @default(autoincrement())

  name String @unique @db.VarChar(255)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  qualitativePropertyOption QualitativePropertyOption[]
  qualitativePropertyResult QualitativePropertyResult[]

  @@index([name])
  @@map("property_option")
}

model QualitativePropertyOption {
  propertyOptionId      Int
  qualitativePropertyId Int

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  propertyOption      PropertyOption      @relation(fields: [propertyOptionId], references: [id])
  qualitativeProperty QualitativeProperty @relation(fields: [qualitativePropertyId], references: [id])

  @@id([propertyOptionId, qualitativePropertyId])
  @@map("qualitative_property_option")
}

model Result {
  id Int @id @default(autoincrement())

  patientId Int @map("patient_id")
  invoiceId Int @map("invoice_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  patient Patient @relation(fields: [patientId], references: [id])
  invoice Invoice @relation(fields: [invoiceId], references: [id])

  @@map("result")
}
